name: Build & Test

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  BUILD_TYPE: Release
  TEST_TAG: henrytill/sdl-bits:test

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { cc: gcc }
          - { cc: clang }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt install -yyq --no-install-recommends \
            build-essential cmake ninja-build \
            libdrm-dev libgbm-dev \
            libsdl2-dev libfreetype-dev
      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=${{matrix.cc}} -GNinja \
            -DBUILD_SHARED_LIBS=ON -DLUA_BUILD_OBJECTS=ON -DENABLE_COVERAGE=ON
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} -T Test --rerun-failed --output-on-failure
      - name: Coverage
        working-directory: ${{github.workspace}}/build
        run: ctest -T Coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{github.workspace}}/build/Testing/CoverageInfo
          verbose: true

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Test
        run: docker run --rm --tty --workdir /home/build/sdl-bits/build ${{env.TEST_TAG}} ctest -j$(nproc)

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: clang64, env: clang-x86_64 }
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: >-
            mingw-w64-${{matrix.env}}-toolchain
            mingw-w64-${{matrix.env}}-ninja
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-SDL2
            mingw-w64-${{matrix.env}}-freetype
      - name: Check MSYSTEM
        run: echo $MSYSTEM
      - name: Configure CMake
        run: |
          mkdir build
          cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -GNinja \
            -DBUILD_SHARED_LIBS=ON -DLUA_BUILD_OBJECTS=ON
      - name: Build
        working-directory: ${{github.workspace}}\build
        run: ninja -j0
      - name: Test
        working-directory: ${{github.workspace}}\build
        run: ctest -C ${{env.BUILD_TYPE}}
